name: "CI"

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
          restore-keys: |
            bun-${{ runner.os }}-
      - name: Install Dependencies
        run: bun install --frozen-lockfile
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}

  test-suite:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [test, "test --coverage", "run lint"]
    name: Run ${{ matrix.task }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
      - name: Restore Bun Cache
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
      - name: Run Task
        run: bun ${{ matrix.task }}

  Build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
      - name: Restore Bun Cache
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
      - name: Build
        run: bun run build

  Release:
    needs: [test-suite, Build]
    if: |
      github.ref == 'refs/heads/main' &&
      github.event.repository.fork == false
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
      - name: Restore Bun Cache
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
      - name: Release
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: bun publish --access public
